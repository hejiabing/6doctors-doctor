<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sixdoctors.doctor.dao.DoctorDAO">
    <resultMap id="doctor" type="cn.sixdoctors.doctor.model.Doctor">
        <id column="doctor_id" property="doctorId" jdbcType="INTEGER"/>
        <result column="doctor_name" property="doctorName" jdbcType="VARCHAR"/>
        <result column="hospital_name" property="hospitalName" jdbcType="VARCHAR"/>
        <result column="depart_name" property="departName" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="insert" parameterType="cn.sixdoctors.doctor.model.Doctor" useGeneratedKeys="true"
            keyProperty="doctorId">
        INSERT INTO
        t_doctor
        (doctor_name, hospital_name, depart_name)
        VALUES
        (#{doctorName}, #{hospitalName}, #{departName})
    </insert>

    <select id="findByDoctorId" parameterType="int" resultMap="doctor">
        SELECT doctor_id, doctor_name, hospital_name, depart_name
        FROM t_doctor
        WHERE
        doctor_id = #{doctorId}
    </select>

    <select id="findByDoctorName" parameterType="string" resultMap="doctor">
        SELECT doctor_id, doctor_name, hospital_name, depart_name
        FROM t_doctor
        WHERE
        doctor_name LIKE CONCAT('%',#{0},'%')
    </select>

    <select id="findBySearch" parameterType="map" resultMap="doctor">
        SELECT doctor_id, doctor_name, hospital_name, depart_name
        FROM t_doctor
        <where>
            <if test="hospitalName != null and hospitalName != ''">
                hospital_name LIKE #{hospitalName}
            </if>
            <if test="departName != null and departName != ''">
                AND depart_name LIKE #{departName}
            </if>
            <if test="doctorName != null and doctorName != ''">
                AND doctor_name LIKE CONCAT('%',#{doctorName},'%')
            </if>
        </where>
    </select>

    <update id="update" parameterType="cn.sixdoctors.doctor.model.Doctor">
        UPDATE t_doctor
        <set>
            <if test="doctorName != null and doctorName != ''">
                doctor_name = #{doctorName},
            </if>
            <if test="hospitalName != null and hospitalName != ''">
                hospital_name = #{hospitalName},
            </if>
            <if test="departName != null and departName != ''">
                depart_name = #{departName},
            </if>
        </set>
        WHERE doctor_id = #{doctorId}
    </update>
</mapper>