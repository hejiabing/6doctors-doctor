<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sixdoctors.doctor.dao.PatientDAO">
    <resultMap id="patient" type="cn.sixdoctors.doctor.model.Patient">
        <id column="patient_id" property="patientId" jdbcType="INTEGER"/>
        <result column="patient_name" property="patientName" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="mobPhone" property="mobPhone" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="identity_type" property="identityType" jdbcType="VARCHAR"/>
        <result column="identity_num" property="identityNum" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="place" property="place" jdbcType="VARCHAR"/>
        <result column="photoPath" property="photoPath" jdbcType="VARCHAR"/>
        <collection property="labels" javaType="java.util.List" ofType="cn.sixdoctors.doctor.vo.LabelVO">
            <id column="label_id" property="labelId" jdbcType="INTEGER"/>
            <result column="name" property="name" jdbcType="VARCHAR"/>
            <result column="doctor_id" property="doctorId" jdbcType="INTEGER"/>
            <result column="label_patient_id" property="labelPatientId" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <insert id="insert" parameterType="cn.sixdoctors.doctor.model.Patient" useGeneratedKeys="true"
            keyProperty="patientId">
        INSERT INTO
        t_patient
        (patient_name, gender, mobPhone, age, identity_type, identity_num, address, place, photoPath)
        VALUES
        (#{patientName}, #{gender}, #{mobPhone}, #{age}, #{identityType}, #{identityNum}, #{address}, #{place}, #{photoPath})
    </insert>

    <select id="findByPatientId" parameterType="int" resultMap="patient">
        SELECT tp.patient_id, tp.patient_name, tp.gender, tp.mobPhone, tp.age, tp.identity_type, tp.identity_num, tp.address, tp.place, tp.photoPath,
        l.label_id, l.name, l.doctor_id, tlp.label_patient_id
        FROM t_patient tp
        left join
        t_label_patient tlp
        on tlp.patient_id = tp.patient_id
        left join
        t_label l
        on l.label_id = tlp.label_id
        WHERE
        tp.patient_id = #{patientId}
    </select>

    <select id="findByPatientName" parameterType="string" resultMap="patient">
        SELECT patient_id, patient_name, gender, mobPhone, age, identity_type, identity_num, address, place, photoPath
        FROM t_patient
        WHERE
        patient_name = #{patientName}
    </select>

    <select id="findByMobPhone" parameterType="string" resultMap="patient">
        SELECT patient_id, patient_name, gender, mobPhone, age, identity_type, identity_num, address, place, photoPath
        FROM t_patient
        WHERE
        mobPhone = #{mobPhone}
    </select>

    <update id="update" parameterType="cn.sixdoctors.doctor.model.Patient">
        UPDATE t_patient
        LEFT JOIN
        t_doctor_patient
        ON t_patient.patient_id = t_doctor_patient.patient_id
        <set>
            <if test="patientName != null and patientName != ''">
                t_patient.patient_name = #{patientName},
                t_doctor_patient.patient_name = #{patientName},
            </if>
            <if test="gender != null and gender != ''">
                t_patient.gender = #{gender},
            </if>
            <if test="mobPhone != null and mobPhone != ''">
                t_patient.mobPhone = #{mobPhone},
            </if>
            <if test="age != 0">
                t_patient.age = #{age},
            </if>
            <if test="identityType != null and identityType != ''">
                t_patient.identity_type = #{identityType},
            </if>
            <if test="identityNum != null and identityNum != ''">
                t_patient.identity_num = #{identityNum},
            </if>
            <if test="address != null and address != ''">
                t_patient.address = #{address},
            </if>
            <if test="place != null and place != ''">
                t_patient.place = #{place},
            </if>
            <if test="photoPath != null and photoPath != ''">
                t_patient.photoPath = #{photoPath},
            </if>
        </set>
        WHERE t_patient.patient_id = #{patientId}
    </update>

</mapper>